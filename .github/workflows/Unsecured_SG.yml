name: List Security Groups with 0.0.0.0/0 and Notify Slack

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC

jobs:
  list_security_groups:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: List security groups with 0.0.0.0/0 in all regions
        id: list-sgs
        run: |
          output=""
          regions=$(aws ec2 describe-regions --query "Regions[].RegionName" --output text)
          for region in $regions; do
            echo "Checking region: $region"
            sgs=$(aws ec2 describe-security-groups --region $region --query "SecurityGroups[?IpPermissions[?IpRanges[?CidrIp=='0.0.0.0/0']]]" --output json)
            sg_count=$(echo $sgs | jq '. | length')
            if [ "$sg_count" -gt 0 ]; then
              region_output="Region: $region"
              vpc_ids=$(echo $sgs | jq -r '.[].VpcId' | sort | uniq)
              for vpc_id in $vpc_ids; do
                vpc_output="\n=========================================\nVPC ID: $vpc_id\n"
                for ((i=0; i<$sg_count; i++)); do
                  sg_vpc_id=$(echo $sgs | jq -r ".[$i].VpcId")
                  if [ "$sg_vpc_id" == "$vpc_id" ]; then
                    sg_name=$(echo $sgs | jq -r ".[$i].GroupName")
                    sg_id=$(echo $sgs | jq -r ".[$i].GroupId")
                    vpc_output="$vpc_output-> Security Group ID: $sg_id\n-> Security Group Name: $sg_name\n"
                  fi
                done
                region_output="$region_output$vpc_output"
              done
              output="$output\n\n$region_output"
            fi
          done
          echo -e "$output" > security_groups_output.txt

      - name: Send output to Slack
        run: |
          output=$(cat security_groups_output.txt)
          payload=$(jq -n --arg text "$output" '{text: $text}')
          curl -X POST -H 'Content-type: application/json' --data "$payload" ${{ secrets.SLACK_WEBHOOK_URL }}
